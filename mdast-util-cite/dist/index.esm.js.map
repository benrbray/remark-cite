{"version":3,"file":"index.esm.js","sources":["../src/index.ts"],"sourcesContent":["import * as Uni from \"unist\";\nimport { Token } from \"micromark/dist/shared-types\";\nimport { MdastExtension } from \"mdast-util-from-markdown/types\";\n\n////////////////////////////////////////////////////////////\n\nexport interface CiteItem {\n\tprefix?: string,\n\tkey: string,\n\tsuffix?: string\n}\n\nexport interface InlineCiteNode extends Uni.Literal {\n\ttype: \"cite\",\n\tvalue: string,\n\tchildren: [],\n\tdata: {\n\t\taltSyntax?: true|undefined;\n\t\tciteItems: CiteItem[]\n\t}\n}\n\n////////////////////////////////////////////////////////////\n\nexport const fromMarkdown: MdastExtension = {\n\tenter : {\n\t\tinlineCite: enterInlineCite,\n\t\tciteItem: enterCiteItem\n\t},\n\texit : {\n\t\tinlineCite: exitInlineCite,\n\t\tinlineCiteMarker_alt: exitInlineCiteMarker_alt,\n\t\tciteItem: exitCiteItem,\n\t\tciteItemPrefix: exitCiteItemPrefix,\n\t\tciteItemKey: exitCiteItemKey,\n\t\tciteItemSuffix: exitCiteItemSuffix\n\t}\n} as MdastExtension;\n\n////////////////////////////////////////////////////////////\n\nfunction top<T>(stack: T[]) {\n\treturn stack[stack.length - 1]\n}\n\n/**\n * [see @wadler1990; also @hughes1989, pp. 4]\n *\n * inlineCite\n *   inlineCiteMarker [\n *   citeItem\n *     citeItemPrefix \"see \"\n *     citeItemSymbol \"@\"\n *     citeItemKey \"wadler1990\"\n *     citeItemSuffix \"\"\n *   citeItem\n *     citeItemPrefix \" also \"\n *     citeItemSymbol \"@\"\n *     citeItemKey \"hughes1989\"\n *     citeItemSuffix \", pp. 4\"\n *   inlineCiteMarker ]\n */\n\n// -- inlineCite -------------------------------------------\n\nfunction enterInlineCite(this: any, token: unknown) {\n\tthis.enter({\n\t\ttype: 'cite',\n\t\tvalue: null,\n\t\tdata: {\n\t\t\tciteItems: []\n\t\t}\n\t}, token);\n}\n\nfunction exitInlineCite(this: any, token: unknown) {\n\tlet citeNode: InlineCiteNode = this.exit(token);\n\tciteNode.value = this.sliceSerialize(token);\n}\n\n// inlineCiteMarker_alt ------------------------------------\n\n/** Only appears when alternate syntax is used. */\nfunction exitInlineCiteMarker_alt(this: any, token: unknown) {\n\tconst currentNode = top(this.stack) as InlineCiteNode;\n\t// @ts-ignore: create invalid citeItem, to be filled later\n\tcurrentNode.data.altSyntax = true;\n}\n\n// -- citeItem ---------------------------------------------\n\nfunction enterCiteItem(this: any, token: Token) {\n\tconst currentNode = top(this.stack) as InlineCiteNode;\n\t// @ts-ignore: create invalid citeItem, to be filled later\n\tcurrentNode.data.citeItems.push({ });\n}\n\nfunction exitCiteItem(this: any, token: Token) {\n\t//let item = this.exit(token);\n\tconst currentNode = top(this.stack) as InlineCiteNode;\n\tconst currentItem = top(currentNode.data.citeItems);\n\tconst citeSrc = this.sliceSerialize(token);\n}\n\n// -- citeItemKey ------------------------------------------\n\nfunction exitCiteItemKey(this: any, token: Token) {\n\tconst currentNode = top(this.stack) as InlineCiteNode;\n\tconst currentItem = top(currentNode.data.citeItems);\n\tconst citeKey = this.sliceSerialize(token);\n\n\tcurrentItem.key = citeKey;\n}\n\n// -- citeItemSuffix ---------------------------------------\n\nfunction exitCiteItemSuffix(this: any, token: Token) {\n\tconst currentNode = top(this.stack) as InlineCiteNode;\n\tconst currentItem = top(currentNode.data.citeItems);\n\tconst citeSuffix = this.sliceSerialize(token);\n\n\tcurrentItem.suffix = citeSuffix;\n}\n\n// -- citeItemPrefix ---------------------------------------\n\nfunction exitCiteItemPrefix(this: any, token: Token) {\n\tconst currentNode = top(this.stack) as InlineCiteNode;\n\tconst currentItem = top(currentNode.data.citeItems);\n\tconst citePrefix = this.sliceSerialize(token);\n\n\tcurrentItem.prefix = citePrefix;\n}\n\n////////////////////////////////////////////////////////////\n\nexport const toMarkdown = {\n\t// TODO\n};"],"names":[],"mappings":"AAsBA;IAEa,YAAY,GAAmB;AAC3C,EAAA,KAAK,EAAG;AACP,IAAA,UAAU,EAAE,eADL;AAEP,IAAA,QAAQ,EAAE;AAFH,GADmC;AAK3C,EAAA,IAAI,EAAG;AACN,IAAA,UAAU,EAAE,cADN;AAEN,IAAA,oBAAoB,EAAE,wBAFhB;AAGN,IAAA,QAAQ,EAAE,YAHJ;AAIN,IAAA,cAAc,EAAE,kBAJV;AAKN,IAAA,WAAW,EAAE,eALP;AAMN,IAAA,cAAc,EAAE;AANV;AALoC;;AAiB5C,SAAS,GAAT,CAAgB,KAAhB,EAA0B;AACzB,SAAO,KAAK,CAAC,KAAK,CAAC,MAAN,GAAe,CAAhB,CAAZ;AACA;AAED;;;;;;;;;;;;;;;;AAgBG;AAEH;;;AAEA,SAAS,eAAT,CAAoC,KAApC,EAAkD;AACjD,OAAK,KAAL,CAAW;AACV,IAAA,IAAI,EAAE,MADI;AAEV,IAAA,KAAK,EAAE,IAFG;AAGV,IAAA,IAAI,EAAE;AACL,MAAA,SAAS,EAAE;AADN;AAHI,GAAX,EAMG,KANH;AAOA;;AAED,SAAS,cAAT,CAAmC,KAAnC,EAAiD;AAChD,MAAI,QAAQ,GAAmB,KAAK,IAAL,CAAU,KAAV,CAA/B;AACA,EAAA,QAAQ,CAAC,KAAT,GAAiB,KAAK,cAAL,CAAoB,KAApB,CAAjB;AACA;;AAID;;;AACA,SAAS,wBAAT,CAA6C,KAA7C,EAA2D;AAC1D,MAAM,WAAW,GAAG,GAAG,CAAC,KAAK,KAAN,CAAvB,CAD0D;;AAG1D,EAAA,WAAW,CAAC,IAAZ,CAAiB,SAAjB,GAA6B,IAA7B;AACA;;;AAID,SAAS,aAAT,CAAkC,KAAlC,EAA8C;AAC7C,MAAM,WAAW,GAAG,GAAG,CAAC,KAAK,KAAN,CAAvB,CAD6C;;AAG7C,EAAA,WAAW,CAAC,IAAZ,CAAiB,SAAjB,CAA2B,IAA3B,CAAgC,EAAhC;AACA;;AAED,SAAS,YAAT,CAAiC,KAAjC,EAA6C;AAC5C;AACA,MAAM,WAAW,GAAG,GAAG,CAAC,KAAK,KAAN,CAAvB;AACA,EAAoB,GAAG,CAAC,WAAW,CAAC,IAAZ,CAAiB,SAAlB;AACvB,EAAgB,KAAK,cAAL,CAAoB,KAApB;AAChB;;;AAID,SAAS,eAAT,CAAoC,KAApC,EAAgD;AAC/C,MAAM,WAAW,GAAG,GAAG,CAAC,KAAK,KAAN,CAAvB;AACA,MAAM,WAAW,GAAG,GAAG,CAAC,WAAW,CAAC,IAAZ,CAAiB,SAAlB,CAAvB;AACA,MAAM,OAAO,GAAG,KAAK,cAAL,CAAoB,KAApB,CAAhB;AAEA,EAAA,WAAW,CAAC,GAAZ,GAAkB,OAAlB;AACA;;;AAID,SAAS,kBAAT,CAAuC,KAAvC,EAAmD;AAClD,MAAM,WAAW,GAAG,GAAG,CAAC,KAAK,KAAN,CAAvB;AACA,MAAM,WAAW,GAAG,GAAG,CAAC,WAAW,CAAC,IAAZ,CAAiB,SAAlB,CAAvB;AACA,MAAM,UAAU,GAAG,KAAK,cAAL,CAAoB,KAApB,CAAnB;AAEA,EAAA,WAAW,CAAC,MAAZ,GAAqB,UAArB;AACA;;;AAID,SAAS,kBAAT,CAAuC,KAAvC,EAAmD;AAClD,MAAM,WAAW,GAAG,GAAG,CAAC,KAAK,KAAN,CAAvB;AACA,MAAM,WAAW,GAAG,GAAG,CAAC,WAAW,CAAC,IAAZ,CAAiB,SAAlB,CAAvB;AACA,MAAM,UAAU,GAAG,KAAK,cAAL,CAAoB,KAApB,CAAnB;AAEA,EAAA,WAAW,CAAC,MAAZ,GAAqB,UAArB;AACA;;;IAIY,UAAU,GAAG;AAAA;;;;"}